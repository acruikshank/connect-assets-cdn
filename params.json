{"google":"","tagline":"A helper module for connect-assets to upload your files to Amazon S3","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Installation [![Build Status](https://secure.travis-ci.org/jgable/connect-assets-cdn.png)](http://travis-ci.org/jgable/connect-assets-cdn)\r\n\r\n`npm install connect-assets-cdn`\r\n\r\n### Usage (Cake Task)\r\n\r\nTo create a Cake task to upload new assets, follow this example.\r\n\r\n**/s3.js**\r\n\r\n    require(\"coffee-script\");\r\n    \r\n    var uploader = require(\"./src/s3AssetUpload\");\r\n    \r\n    uploader.upload(console.log, function(err, uploaded) {\r\n        if(err) {\r\n            return console.log(\"Error uploading: \" + err.message);\r\n            process.exit(1);\r\n        }\r\n    \r\n        console.log(\"Completed\");\r\n        process.exit(0);\r\n    });\r\n\r\n**/src/s3AssetUpload.coffee**\r\n\r\n    express = require 'express'\r\n    assets = require \"connect-assets\"\r\n    jsPaths = require \"connect-assets-jspaths\"\r\n    \r\n    {AssetsCDN} = require \"connect-assets-cdn\"\r\n    \r\n    # Either create a config file like here or set this to \r\n    # an object with amazon key, secret and bucket values\r\n    # Also should have the assetsRoot; e.g. //s3.amazonaws.com/myBucket\r\n    config = require \"./config\"\r\n    \r\n    primeCSS = (assets) ->\r\n        # We only have one file to pre-compile for css\r\n        # You might need to add more for your situation;\r\n        # whatever you reference in your views should be \r\n        # referenced like this here\r\n        assets.instance.options.helperContext.css \"prod\"\r\n    \r\n    upload = (log, done) ->\r\n    \r\n        # Set up a fake express server so we can load connect-assets\r\n        app = express()\r\n    \r\n        opts = \r\n            # TODO: Set your assetsRoot\r\n            servePath: config.assetsRoot\r\n    \r\n        app.use assets opts\r\n    \r\n        # Prime the CSS files\r\n        primeCSS assets\r\n        # Prime the JS files\r\n        jsPaths assets\r\n        \r\n        # TODO: Set these from your config\r\n        {key, secret, bucket} = config.amazon\r\n    \r\n        # Create our cdn manager and upload\r\n        cdn = new AssetsCDN {assets, key, secret, bucket, log}\r\n    \r\n        cdn.upload done\r\n    \r\n    module.exports = {upload}\r\n\r\n**/Cakefile** \r\n\r\n    task 's3', 'Upload builtAssets', ->\r\n        # Set production NODE_ENV\r\n        currentEnv = process.env\r\n        currentEnv.NODE_ENV = \"production\"\r\n\r\n        server = spawn 'node', ['s3.js'],\r\n          env: currentEnv\r\n\r\n        server.stdout.pipe process.stdout\r\n        server.stderr.pipe process.stderr\r\n\r\n### Usage (Before Starting Server)\r\n\r\n    # You can also upload new assets before starting the server...\r\n\r\n    assets = require 'connect-assets'\r\n    {AssetsCDN} = require 'connect-assets-cdn'\r\n    \r\n    # Snip ...\r\n    \r\n    app.use assets\r\n    \tservePath: '//s3.amazonaws.com/S3_Bucket'\r\n    \r\n    # You should probably only upload for production\r\n    if process.env.NODE_ENV == \"production\"\r\n\r\n    \tcdn = new AssetsCDN \r\n    \t\tassets: assets\r\n    \t\tkey: \"S3_Key\"\r\n    \t\tsecret: \"S3_Secret\"\r\n    \t\tbucket: \"S3_Bucket\"\r\n\r\n    \tcdn.upload (err, uploadedPaths) ->\r\n    \t\tthrow err if err\r\n\r\n    \t\tapp.listen 3000, (err) ->\r\n    \t\t\tconsole.log \"Server started\"\r\n\r\n### TODO:\r\n\r\n* Better uploader tests\r\n\r\n### Thanks\r\n\r\nMade possible thanks to [connect-assets](https://github.com/TrevorBurnham/connect-assets), [knox](https://github.com/learnboost/knox).\r\n    \r\n### Copyright\r\n\r\nCreated by [Jacob Gable](http://jacobgable.com).  MIT License; no attribution required.","name":"connect-assets-cdn"}